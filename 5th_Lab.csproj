using System;
public class Program
{
    
    //level 1
    // #1

    static int pk(int k1, int n1)
    {
        int n2 = 1;
        int k2 = 1;
        int k2n2 = 1;
        int hod = 1;
        while (hod <= k1)
        {
            while (hod <= k1)
            {
                k2 = k2 * hod;
                hod++;
            }
            
        }
        return k2;
    }
    static int pnk(int k1, int n1)
    {
        int n2 = 1;
        int k2 = 1;
        int k2n2 = 1;
        int hod = 1;
        while (hod <= n1 - k1)
        {
            k2n2 = k2n2 * hod;
            hod++;
        }
            return k2n2;
    }
        static int pn(int k1, int n1)
        {
            int n2 = 1;
            int k2 = 1;
            int k2n2 = 1;
            int hod = 1;
            while (hod <= n1)
            {
                n2 = n2 * hod;
                hod++;
            }

        return n2;
        }
    
    
    // #2
    static double p2 (double a1, double b1, double c1)
    {
        double p = (a1 + b1 + c1) / 2;
        double s = Math.Sqrt(p * (p - a1) * (p - b1) * (p - c1));
        return s;
    }
    //level 2
    // #6
    static void p(List<double> aa)
    {
        int co = aa.Count;
        double ma = aa[0];
        for (int i = 0; i < co; i++)
        {
            if (ma < aa[i])
            {
                ma = aa[i];
            }
        }
        aa.RemoveAll(sc => sc == ma);
    }
    
    
    // #10
    static void del(int n, int [,] aa, int nn)
    {
        for (int i = 0; i < nn; i++)
        {
            for (int k = n; k < nn - 1; k++)
            {
                aa[i, k] = aa[i, k + 1];
            }
        }
        for (int k = 0; k < nn; k++)
            {
                aa[k, nn - 1] = 0;
            }
    }
    
    // #23
    static void preobr(double[,] aa, int nn, int mm)
    {
        double[,] xran = new double[3, 5];
        double[] matr = new double[nn * mm];
        
            for (int i = 0; i < nn; i++)
        {
            for (int k = 0; k < mm; k++)
            {
                matr[i * mm + k] = aa[i, k];
            }
        }

        for (int i = 0; i < 5; i++)
        {
            xran[0, i] = matr[i];
            xran[1, i] = i / mm;
            xran[2, i] = i - (xran[1, i]) * mm;
        }
        double xr = 0;
        double xr_n = 0;
        double xr_m = 0;
        int flak = 0;

        double vr_xr = 0;
        double vr_xr_n = 0;
        double vr_xr_m = 0;

        for (int i = 0; i < nn * mm; i++)
        {
            for (int k = 0; k < 5; k++)
            {
                if (matr[i] > xran[0, k] && flak == 0)
                {
                    xr = xran[0, k];
                    xr_n = xran[1, k];
                    xr_m = xran[2, k];
                    xran[0, k] = matr[i];
                    xran[1, k] = i / mm;
                    xran[2, k] = i - xran[1, k] * mm;
                    flak = 1;
                }
                else if (flak == 1)
                {
                    vr_xr = xran[0, k];
                    vr_xr_n = xran[1, k];
                    vr_xr_m = xran[2, k];

                    xran[0, k] = xr;
                    xran[1, k] = xr_n;
                    xran[2, k] = xr_m;

                    xr = vr_xr;
                    xr_n = vr_xr_n;
                    xr_m = vr_xr_m;
                }


            }
            xr = 0;
            xr_n = 0;
            xr_m = 0;

            flak = 0;



        }

        
        for (int i = 0; i < 3; i++)
        {
            for (int k = 0; k < 5; k++)
            {
                Console.Write("{0,5} ", xran[i, k]);
            }
            Console.WriteLine("");
        }
        Console.WriteLine("");
        




        for (int k = 0; k < 5; k++)
        {
            if (aa[(int)xran[1, k], (int)xran[2, k]] > 0)
            {
                aa[(int)xran[1, k], (int)xran[2, k]] *= 4;
            }
            else
            {
                aa[(int)xran[1, k], (int)xran[2, k]] = aa[(int)xran[1, k], (int)xran[2, k]] / 4;
            }
        }

        for (int i = 0; i < nn; i++)
        {
            for (int k = 0; k < mm; k++)
            {
                if (aa[i, k] > 0)
                {
                    aa[i, k] = aa[i, k] / 2;
                }
                else
                {
                    aa[i, k] = aa[i, k] * 2;
                }
            }
        }

    }
    
    //level 3
    // #4
    delegate void peresilca(double [,] a, int nn, ref List<double> b, ref int co);
    
    static void shcet(double [,] a, int nn, ref List<double> b, ref int co) 
    {
        for (int i = 0; i < nn; i++)
        {
            for (int k = i; k < nn; k++)
            {
                b.Add(a[i,k]);
                co++;
                //Console.WriteLine(co);
                //Console.WriteLine(b[i]);
            }
        }
        //Console.WriteLine(co);
    }
    
    
    static void preobr(double [,] a, int nn, List<double> b, ref double suu, peresilca sh)
    {
        int co = 0;
        sh(a, nn, ref b, ref co);
        //Console.WriteLine(co);
        for (int i = 0; i < co ; i++)
        {
            suu = suu + b[i] * b[i];
        }
    }
    
    
    //level 3
    // #2
    
    
    delegate void sroca(ref double [,] a, int mm, List<double> b, int ii);
    static void chet(ref double [,] a, int mm, List<double> b, int ii)
    {
        for (int k = 0; k < mm; k++)
        {
            b.Add(a[ii, k]);
        }
        b.Sort();
        for (int k = 0; k < mm; k++)
        {
            a[ii, k] = b[k];
        }
    }
    static void nochet(ref double [,] a, int mm, List<double> b, int ii)
    {
        for (int k = 0; k < mm; k++)
        {
            b.Add(a[ii, k]);
        }
        b.Sort();
        for (int k = mm - 1; k >= 0; k--)
        {
            a[ii, k] = b[mm - k - 1];
        }
    }
    
    
    static void obrabot(ref double [,] a, int nn, int mm, sroca chet, sroca nochet)
    {
        sroca sr;
        for (int i = 0; i < nn; i++)
        {
            List<double> bb = new List<double>();
            if (i / 2 * 2 == i)
            {
                sr = chet;
            }
            else
            {
                sr = nochet;
            }
            sr(ref a, mm, bb, i);
        }
    }
    
    
    // #6
    
    delegate int ma(double [,] a, int n);
    
    static int diag_ma(double [,] a, int n)
    {
        double max = a[0, 0];
        int ma_i = 0;
        for (int i = 0; i < n; i++)
        {
            if (max < a[i, i])
            {
                max = a[i, i];
                ma_i = i;
            }
        }
        return ma_i;
    }
    
    static int stroka_ma(double [,] a, int n)
    {
        double max = a[0, 0];
        int ma_i = 0;
        for (int i = 0; i < n; i++)
        {
            if (max < a[0, i])
            {
                max = a[0, i];
                ma_i = i;
            }
        }
        return ma_i;
    }
    
    
    static void stroka_ma(ref double [,] a, int n, int str_i, int diag_i)
    {
        double xran = 0;
        for (int i = 0; i < n; i++)
        {
            xran = a[i, str_i];
            a[i, str_i] = a[i, diag_i];
            a[i, diag_i] = xran;
        }
    }


    public static void Main(string[] args)
    {
        //level 1
        // #1
        Console.WriteLine("level 1");
        Console.WriteLine("#1");
        int k = 0;
        int n = 0;
        try
        {
            Console.WriteLine("Введите размер команды");
            k = int.Parse(Console.ReadLine());
            Console.WriteLine("Введите количество кандидатов");
            n = int.Parse(Console.ReadLine());
            
        }
        catch { Console.WriteLine("все по 0"); }

        Console.WriteLine(pn(k, n) / (pk(k, n) * pnk(k, n)));
        
        
        // #2
        Console.WriteLine("#2");
        double s1 = 0;
        double s2 = 0;
        int flak = 0;
        double max_s = 0;
        int nomer = 0;
        for (int i = 0; i < 2; i++)
        {
            Console.Write("Треугольник № ");
            Console.WriteLine(i + 1);
            double a = 0;
            double b = 0;
            double c = 0;

            try
            {
                Console.WriteLine("Введите a");
                a = double.Parse(Console.ReadLine());
                Console.WriteLine("Введите b");
                b = double.Parse(Console.ReadLine());
                Console.WriteLine("Введите c");
                c = double.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine("Это не треугольник");
                flak = 1;
                break;
            }

            if (a <= 0 || b <= 0 || c <= 0 || a * a > b * b + c * c || c * c > a * a + b * b || b * b > a * a + c * c)
            {
                flak = 1;
                break;
            }
            double Ss = p2(a, b, c);
            
            if (max_s > Ss) ;
                {
                    max_s = Ss;
                    nomer = i;
                }
            
        }
        if (flak == 1)
        {
            Console.WriteLine("Это не треугольник!");
        }
        else
        {
            Console.Write("Больше ");
            Console.WriteLine(nomer);
        }


//level 2
        // #6
        Console.WriteLine("level 2");
        Console.WriteLine("#6");
        List<double> a1 = new List<double>() { 2, 3, 6, -3, 5, 3, -5};
        List<double> a2 = new List<double>() { 2, -3, 3, 5, 6, -3, 0, 9};
        for (int i = 0; i < 2; i++)
        {
            if (i == 0)
            {
                p(a1);
            }
            else
            {
                p(a2);
            }
        }
        int countt = a2.Count;
        for (int k = 0; k < countt; k++)
        {
            a1.Add(a2[k]);
        }
        countt = a1.Count;
        for (int k = 0; k < countt; k++)
        {
            Console.Write(a1[k]);
            Console.Write(" ");
        }
        Console.WriteLine("");
        
        
        
        
        // #10
        Console.WriteLine("#10");
        int n = 5;
        int[,] a5_5 = new int[,] {{4, 7, 10, 3, 3}, 
                                        {54, -7, 23, 65, -4}, 
                                        {3, 4, 50, -24, 45}, 
                                        {34, 2, -3, 6, 22}, 
                                        {-44, 34, 3, 33, 23}};
                                        
        for (int i = 0; i < n; i++)
        {
            for (int k = 0; k < n; k++)
            {
                Console.Write("{0,5} ", a5_5[i, k]);
            }
            Console.WriteLine("");
        }
        Console.WriteLine("");
        
        
        int mi = a5_5[0, 1];
        int ma = a5_5[0, 0];
        
        int ma_n = 0;
        int ma_m = 0;
        for (int i = 0; i < n; i++)
        {
            for (int k = 0; k <= i; k++)
            {
                if (ma < a5_5[i, k])
                {
                    ma = a5_5[i, k];
                    ma_n = k;
                }
            }
        }
        Console.WriteLine(ma);
        
        int mi_n = 0;
        int mi_m = 1;
        for (int i = 0; i < n; i++)
        {
            for (int k = i; k < n; k++)
            {
                if (mi > a5_5[i, k])
                {
                    mi = a5_5[i, k];
                    mi_n = k;
                }
            }
        }
        Console.WriteLine(mi);
        
        int t = 0;
        if (mi_n == ma_n)
        {
            del(mi_n, a5_5, n);
            t = 1;
        }
        else
        {
            del(mi_n, a5_5, n);
            del(ma_n, a5_5, n);
            t = 2;
        }
        
        Console.WriteLine("");
        for (int i = 0; i < n; i++)
        {
            for (int k = 0; k < n - t; k++)
            {
                Console.Write("{0,5} ", a5_5[i, k]);
            }
            Console.WriteLine("");
        }
        Console.WriteLine("");

        
        
        // #23
        Console.WriteLine("#23");
        int n_a4_5 = 4;
        int m_a4_5 = 5;
        double[,] a4_5 = new double[,] {{4, 7, 1000, -3, 3},
                                    {-54, -7, -230, 650, 4},
                                    {-3, -4,  5000, -24, -45},
                                    {-34,   -2,    -100, -6, -22}};

        for (int i = 0; i < n_a4_5; i++)
        {
            for (int k = 0; k < m_a4_5; k++)
            {
                Console.Write("{0,5} ", a4_5[i, k]);
            }
            Console.WriteLine("");
        }
        Console.WriteLine("");

        preobr(a4_5, n_a4_5, m_a4_5);


        for (int i = 0; i < n_a4_5; i++)
        {
            for (int k = 0; k < m_a4_5; k++)
            {
                Console.Write("{0,5} ", a4_5[i, k]);
            }
            Console.WriteLine("");
        }
        Console.WriteLine("");
    

//level 3
        // #4
        Console.WriteLine("level 3");
        Console.WriteLine("#4");
        int n5 = 5;
        double[,] a5 = new double[,] {  {4,   7, 10,  3,  3}, 
                                        {54, -7, 23, 65, -4}, 
                                        {3,   4, 50,-24, 45}, 
                                        {34,  2, -3,  6, 22}, 
                                        {-44, 34, 3, 33, 23}};
        List<double> b = new List<double>();
        double suu = 0;
        
        
        
        preobr(a5, n5, b, ref suu, shcet);
        
        Console.WriteLine(suu);
        
        
        //level 3
        // #2
        Console.WriteLine("#2");
        int n5_4 = 5;
        int m5_4 = 4;
        double[,] a5_4 = new double[,] {{4,   7, 10,  3}, 
                                        {54, -7, 23, 65}, 
                                        {3,   4, 50,-24}, 
                                        {34,  2, -3,  6}, 
                                        {-44, 34, 3, 33}};
        obrabot(ref a5_4, n5_4, m5_4 , chet, nochet);
        
        for (int i = 0; i < n5_4; i++)
        {
            for (int k = 0; k < m5_4; k++)
            {
                Console.Write("{0,5} ", a5_4[i, k]);
            }
            Console.WriteLine("");
        }
        Console.WriteLine("");

        
        
        // #6
        Console.WriteLine("#6");
        int n55 = 5;
        double[,] a55 = new double[,] { {4,   7, 10,  300,  3}, 
                                        {54, -7, 23, 65, -4}, 
                                        {3,   4, 50,-24, 45}, 
                                        {34,  2, -3,  6, 22}, 
                                        {-44, 34, 3, 33, 23}};
        
        
        ma di = diag_ma;
        ma st = stroka_ma;
        
        int n1 = di(a55, n55);
        int n2 = st(a55, n55);
        
        stroka_ma(ref a55, n55, n1, n2);
        
        for (int i = 0; i < n55; i++)
        {
            for (int k = 0; k < n55; k++)
            {
                Console.Write("{0,5} ", a55[i, k]);
            }
            Console.WriteLine("");
        }
        Console.WriteLine("");

}
    
    
    
}

